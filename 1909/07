import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class Practice {
    public static Map<Integer,Integer> count(int[] numbers){
        Map<Integer,Integer> map = new HashMap<>();

        for(int n : numbers){
            int r = map.getOrDefault(n,0);
            map.put(n,r + 1);
        }
        return map;
    }

    public static int countnum(int[] nums){
        Map<Integer,Integer> map = new HashMap<>();
        for(int n : nums){
            int r = map.getOrDefault(n,0);
            map.put(n,r + 1);
        }
        for(Map.Entry<Integer,Integer> entry : map.entrySet()){
            int c = entry.getKey();
            int a = entry.getValue();
            if(a == 1){
                return c;
            }
        }
        return -1;
    }

    public static ListNode copy(ListNode head){
        ListNode p = head;
        ListNode result = null;
        ListNode last = null;
        Map<ListNode,ListNode> map = new HashMap<>();
        while(p != null){
            ListNode q = new ListNode();
            q.val = p.val;
            if(result == null){
                result = q;
            }else{
                last.next = q;
            }
            last = q;
            map.put(p,q);
            p = p.next;
        }
        p = head;
        ListNode q = result;
        while (p != null){
            q.random = map.get(p.random);
            p = p.next;
            q = q.next;
        }
        return result;
    }

    public static int numJewel(String J,String S){
        Set<Character> jewels = new HashSet<>();
        for(char ch : J.toCharArray()){
            jewels.add(ch);
        }
        int count = 0;
        for(char ch : S.toCharArray()){
            if(jewels.contains(ch)){
                count++;
            }
        }
        return count;
    }

    public static Map<String,Integer> count(String[] words){
        Map<String,Integer> map = new HashMap<>();
        for(String s : words){
            int r = map.getOrDefault(s,0);
            map.put(s,r + 1);
        }
        return map;
    }
    
    public static void main(String[] args) {
        int[] num = new int[]{1,2,3,4,3,2,1};
        Map<Integer,Integer> map = new HashMap<>();
        int c = countnum(num);
        System.out.println(count(num));
        System.out.println(c);
    }
}
