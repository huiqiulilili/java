package lesson2;

import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class Practice11 {
    public static List<String> randomList(){
        List<String> list = new LinkedList<>();
        char[] chars = {'a','b','c','d','e'};
        for(int i = 0;i < 100000;i ++){
            int random = new Random().nextInt(chars.length);
            char c = chars[random];
            list.add(new String(String.valueOf(c)));
        }
        return list;
    }

    public static void main(String[] args) throws InterruptedException {
        Thread[] thread = new Thread[10];
        long start = System.currentTimeMillis();
        List<String> list = randomList();
        for(int i = 0;i < 10;i ++){
            int k = i;
            thread[i] = new Thread(new Runnable() {
                @Override
                public void run() {
                    System.out.println("id =" + Thread.currentThread().getId() +  "   name =" +  Thread.currentThread().getName());
                    for(int j = 0;j < 10000;j ++){
                        list.get(k * 1000 + j);
                }
            }
        });
            thread[i].start();
    }
        /*while(Thread.activeCount()>2){
            Thread.yield();
        }*/

        for(int i = 0;i < 10;i ++){
            thread[i].join();
        }
        long end = System.currentTimeMillis();

        System.out.println("消耗时间" + (end - start));
}
}
