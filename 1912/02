package lesson4;

/**
 * 自己实现线程池
 */
public class P {

    private MyBlockingQueue<Runnable> queue ;

    private MyWorker[] workers;

    public P(int capacity,int size){
        workers = new MyWorker[capacity];
        queue =  new MyBlockingQueue<>(20);
        for(int i = 0;i < capacity;i ++){
            workers[i] = new MyWorker(queue);
            workers[i].start();
        }
    }

    public void execute(Runnable task) throws InterruptedException {
        queue.offer(task);
    }
}

class  MyWorker extends Thread{
    private MyBlockingQueue<Runnable> queue ;
    MyWorker(MyBlockingQueue queue){
        this.queue = queue;
    }
    @Override
    public void run() {
        while (true){
            try {
                Runnable task =  queue.poll();
                task.run();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}
