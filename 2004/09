package Unsafe;

import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;
import java.util.concurrent.CopyOnWriteArraySet;

// 同理可证：java.util.ConcurrentModificationException
//解决方案一：Set<String> set = Collections.synchronizedSet(new HashSet<>());
//解决方案二：Set<String> set = Collections.synchronizedSet(new HashSet<>());
public class SetTest {
    private static Object CopyOnWriteArraySet;

    public static void main(String[] args) {
        Set<String> set = new HashSet<>();
//        Set<String> set = Collections.synchronizedSet(new HashSet<>());
//        Set<String> set = new CopyOnWriteArraySet<>();
        for (int i = 1; i <= 30; i++) {
            new Thread(()->{
                set.add(UUID.randomUUID().toString().substring(0,5));
                System.out.println(set);
            },String.valueOf(i)).start();
        }
    }
}
  
